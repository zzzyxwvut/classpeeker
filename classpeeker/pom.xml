<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.zzzyxwvut</groupId>
    <artifactId>classpeeker</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <description>An inspector of classes.</description>

    <properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

	<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
	<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
	<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
	<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
	<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
	<maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>

	<commons-cli.version>1.4</commons-cli.version>
	<junit.jupiter.version>5.7.0</junit.jupiter.version>
	<impedimenta.version>1.0-SNAPSHOT</impedimenta.version>

	<classpeeker.assembly>
	    jar-with-dependencies-no-module-info
	</classpeeker.assembly>
    </properties>

    <dependencies>
	<dependency>
	    <groupId>commons-cli</groupId>
	    <artifactId>commons-cli</artifactId>
	    <version>${commons-cli.version}</version>
	</dependency>

	<!--
	    impedimenta should be cloned and locally installed from:
	    https://bitbucket.org/zzzyxwvut/impedimenta.git
	-->
	<dependency>
	    <groupId>org.zzzyxwvut</groupId>
	    <artifactId>impedimenta</artifactId>
	    <version>${impedimenta.version}</version>
	    <optional>true</optional>
	</dependency>

	<dependency>
	    <groupId>org.junit.jupiter</groupId>
	    <artifactId>junit-jupiter</artifactId>
	    <version>${junit.jupiter.version}</version>
	    <scope>test</scope>
	</dependency>

	<dependency>
	    <groupId>org.junit.jupiter</groupId>
	    <artifactId>junit-jupiter-api</artifactId>
	    <version>${junit.jupiter.version}</version>
	    <scope>test</scope>
	</dependency>

	<dependency>
	    <groupId>org.junit.jupiter</groupId>
	    <artifactId>junit-jupiter-engine</artifactId>
	    <version>${junit.jupiter.version}</version>
	    <scope>test</scope>
	</dependency>

	<dependency>
	    <groupId>org.junit.jupiter</groupId>
	    <artifactId>junit-jupiter-params</artifactId>
	    <version>${junit.jupiter.version}</version>
	    <scope>test</scope>
	</dependency>
    </dependencies>

    <build>
	<plugins>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
		<version>${maven-compiler-plugin.version}</version>
		<configuration>
		    <encoding>UTF-8</encoding>
		    <release>11</release>
		    <showDeprecation>true</showDeprecation>
		    <showWarnings>true</showWarnings>
		    <verbose>false</verbose>
		    <compilerArgs>
			<arg>-g</arg>
			<!-- JLS-11, $5.1.1. -->
			<arg>-Xlint:all,-cast</arg>
			<arg>-Xdiags:verbose</arg>
		    </compilerArgs>
		</configuration>
		<executions>
		    <execution>
			<id>default-compile</id>
			<goals>
			    <goal>compile</goal>
			</goals>
			<configuration>
			    <compilerArgs combine.children="append">
				<arg>-Xdoclint:all,-missing/private</arg>
			    </compilerArgs>
			</configuration>
		    </execution>
		    <execution>
			<id>default-testCompile</id>
			<goals>
			    <goal>testCompile</goal>
			</goals>
			<configuration>
			    <compilerArgs combine.children="append">
				<arg>-Xdoclint:all,-missing</arg>
			    </compilerArgs>
			</configuration>
		    </execution>
		</executions>
	    </plugin>

	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-plugin</artifactId>
		<version>${maven-surefire-plugin.version}</version>
		<configuration>
		    <excludes>
			<exclude>%regex[.+IntegrationTests??.class]</exclude>
		    </excludes>
		</configuration>
	    </plugin>

	    <!--
		NOTE: Owing to this project's unpacking (see src/assembly),
		the following three plugins should be executed in
		the declaration order during the package phase:
		    (1) maven-assembly-plugin,
		    (2) maven-resources-plugin,
		    (3) maven-jar-plugin
	    -->
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-assembly-plugin</artifactId>
		<version>${maven-assembly-plugin.version}</version>
		<executions>
		    <execution>
			<id>${classpeeker.assembly}</id>
			<phase>package</phase>
			<goals>
			    <goal>single</goal>
			</goals>
			<configuration>
			    <descriptors>
				<descriptor>
				    src/assembly/${classpeeker.assembly}.xml
				</descriptor>
			    </descriptors>
			    <archive>
				<addMavenDescriptor>true</addMavenDescriptor>
				<manifest>
				    <mainClass>
					org.zzzyxwvut.classpeeker.BasicLauncher
				    </mainClass>
				</manifest>
			    </archive>
			</configuration>
		    </execution>
		</executions>
	    </plugin>

	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-resources-plugin</artifactId>
		<version>${maven-resources-plugin.version}</version>
		<executions>
		    <execution>
			<id>bespoke-resources</id>
			<phase>package</phase>
			<goals>
			    <goal>resources</goal>
			</goals>
			<configuration>
			    <propertiesEncoding>
				${project.build.sourceEncoding}
			    </propertiesEncoding>
			    <resources>
				<resource>
				    <directory>src/main/resources</directory>
				    <filtering>true</filtering>
				</resource>
			    </resources>
			</configuration>
		    </execution>
		    <execution>
			<id>default-resources</id>
			<phase>none</phase>
			<goals>
			    <goal>resources</goal>
			</goals>
		    </execution>
		</executions>
	    </plugin>

	    <!-- Versions 3.1.2+ treat optionally -m <module>[/<main-class>] -->
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-jar-plugin</artifactId>
		<version>${maven-jar-plugin.version}</version>
		<executions>
		    <execution>
			<id>bespoke-jar</id>
			<phase>package</phase>
			<goals>
			    <goal>jar</goal>
			</goals>
			<configuration>
			    <archive>
				<addMavenDescriptor>true</addMavenDescriptor>
			    </archive>
			</configuration>
		    </execution>
		    <execution>
			<id>default-jar</id>
			<phase>none</phase>
			<goals>
			    <goal>jar</goal>
			</goals>
		    </execution>
		</executions>
	    </plugin>

	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-failsafe-plugin</artifactId>
		<version>${maven-failsafe-plugin.version}</version>
		<executions>
		    <execution>
			<id>integration-test</id>
			<goals>
			    <goal>integration-test</goal>
			</goals>
			<configuration>
			    <disableXmlReport>true</disableXmlReport>
			    <enableAssertions>false</enableAssertions>
			    <forkedProcessExitTimeoutInSeconds>
				30
			    </forkedProcessExitTimeoutInSeconds>
			    <forkedProcessTimeoutInSeconds>
				0
			    </forkedProcessTimeoutInSeconds>
			    <!-- The path is relative to _testClassesDirectory_. -->
			    <includes>
				<include>%regex[.+IntegrationTests??.class]</include>
			    </includes>
			    <junitArtifactName>junit-jupiter</junitArtifactName>
			    <printSummary>true</printSummary>
			    <skipAfterFailureCount>1</skipAfterFailureCount>
			</configuration>
		    </execution>
		    <execution>
			<id>verify</id>
			<goals>
			    <goal>verify</goal>
			</goals>
		    </execution>
		</executions>
		<configuration>
		    <reportsDirectory>
			${project.build.directory}/failsafe-reports
		    </reportsDirectory>
		    <testClassesDirectory>
			${project.build.testOutputDirectory}
		    </testClassesDirectory>
		</configuration>
	    </plugin>
	</plugins>

	<finalName>${project.artifactId}-${project.version}</finalName>
    </build>
</project>
